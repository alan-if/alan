This file attempts to describe how tags and branches are used to allow
making of releases, porting and other CM stuff.

"make release"

    always checks that appropriate executables in the export
    directory ($ALANDIR/bin/*) are up-to-date in respect to the
    source files, you can't do a release if they are not (in that
    case you have to make them...)

    A tag (vXYZ) is set at the current HEAD in the main branch, a
    branch tag is also set here (vXYZ_branch)

    The file LASTRELEASE will contain the venum of the last
    released version on the current branch. Finally the venum is
    upgraded and committed (the next build will make 

        vX.Y.(Z+1)

    Then that upcoming version is written to the file NEXTRELEASE.


"make <platform>"

    for NFS mounted platforms a build with the correct make
    options are performed

    for amiga, pc etc. sources are exported from the tags as above
    and sources packaged (or whatever). Tags (such as vXYZamiga)
    are also set to indicated the place where the sources was taken.


The above scheme will make it possible to add changes done later to
the branches and then carefully merging them into the main branch. The
scheme for this is to add both a branch tag (vXYZ<target>_branch) and
a specific tag (vXYZ<target>) at the point where the sources was
taken. The source on that branch can then be checked out and changes
added and committed. The HEAD of the branch (the vXYZ<target>_branch
tag) will now refer to *all* the changes performed on that branch.

The merge can now be performed at anytime in the trunk by performing
the following command in a working directory on the trunk

    cvs update -jvXYZ<target> -jvXYZ<target>_branch

This should introduce all changes performed on the branch for <target>
into the sources in the working directory, tested and committed.

To ensure that it is possible to continue doing changes on the branch
the source tag (vXYZ<target>) should be moved to the current HEAD of
the branch vXYZ<target>_branch. This is performed by

    cvs rtag -F -r vXYZ<target> vXYZ<target>_base
    cvs rtag -F -r vXYZ<target>_branch vXYZ<target>

The next time a branch is changed, just follow the same procedure...


Illustrations (uses RCS revision numbers which are just markers of no
other significance):

A) After a "make release" (vXYZ) and "make <target>" (vXYZ<target>):

         --- tags: vXYZ & vXYZ<target>
        |
        |
        |
        |
        V
1.1----1.2


B) After creating the vXYZ<target>_branch and committing changes on it:

         --- tags: vXYZ & vXYZ<target>
        |
        |   1.2.0.1----1.2.0.2----1.2.0.3   <---- vXYZ<target>_branch
        |  /
        | /
        V/
1.1----1.2                  <---- trunk, main branch


C) After committing changes on the main trunk:

         --- tags: vXYZ & vXYZ<target>
        |
        |
        |   1.2.0.1----1.2.0.2----1.2.0.3   <---- vXYZ<target>_branch
        |  /
        | /
        V/
1.1----1.2----1.3----1.4----1.5         <---- trunk, main branch


D) The changes made on the branch is 1.2.0.3 - 1.2.0.1, or the
difference between vXYZ<target> and the HEAD of the
vXYZ<target>_branch, which is easily merged into a working directory
on the trunk:

         --- tags: vXYZ & vXYZ<target>
        |
        |
        |   1.2.0.1----1.2.0.2----1.2.0.3   <---- vXYZ<target>_branch
        |  /  <                      >
        | /   <------------------+--->
        V/                       |
1.1----1.2----1.3----1.4----1.5--+-1.6      <---- trunk, main branch


E) The vXYZ<target> tag must now be moved so we know where to start
diffing the next time:

         ---- tag: vXYZ               ----vXYZ<target>
        |                            |
        |                            V
        |   1.2.0.1----1.2.0.2----1.2.0.3   <---- vXYZ<target>_branch
        |  /  <                     >
        | /   <------------------+-->
        V/                       |
1.1----1.2----1.3----1.4----1.5--+-1.6      <---- trunk, main branch


F) Further changes on the vXYZ<target>_branch can now be merged into the
trunk as before, diffing vXYZ<target> with the HEAD of the branch:

         ---- tag: vXYZ               ----vXYZ<target>
        |                            |
        |                            V
        |   1.2.0.1----1.2.0.2----1.2.0.3----1.2.0.4
        |  /  <      diff/merge    >  < diff/merge >
        | /   <-------------------+>  <-----------+>
        V/                        |               |
1.1----1.2----1.3----1.4----1.5---+-1.6-----------+-1.7   <---- trunk, main branch

G) Etc. If a new "make release" or "make <non-unix target>" is performed
where back at B).


NOTE that this currently does not handle the case where we have
multiple portings going on for the same correction and platform,
because a new "make <platform>" moves the vXYZ<target> forward to a
new position and this removes any possibilities to add changes on the
previous vXYZ<target>_branch from which some sources where exported.

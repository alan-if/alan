# Main common targets: clean build unit test
# "packages" must be defined in platform dependent makefiles

ifneq ($(EMACS),)
JREGROUTPUT = -noansi
else
UNITOUTPUT ?= -c
endif

PLATFORM = "Needs to be set by platform specific Makefile"

.PHONY: clean
clean:
	@echo "******** Target: $@ ***********"
	-$(MAKE) -C compiler clean
	-$(MAKE) -C interpreter clean
	-$(MAKE) -C converter clean
	@-rm -f alan3*.tgz

.PHONY: build
build:
	@echo "******** Target: $@ ***********"
	$(MAKE) -C compiler BUILDNUMBER=$(BUILDNUMBER) build
	$(MAKE) -C interpreter BUILDNUMBER=$(BUILDNUMBER) build
	$(MAKE) -C converter BUILDNUMBER=$(BUILDNUMBER) build

.PHONY: unit
unit:
	@echo "******** Target: $@ ***********"
	-$(MAKE) -C compiler UNITOUTPUT="$(UNITOUTPUT)" unit
	-$(MAKE) -C interpreter UNITOUTPUT="$(UNITOUTPUT)" unit
	-$(MAKE) -C converter UNITOUTPUT="$(UNITOUTPUT)" unit

.PHONY: test
test:
	@echo "******** Target: $@ ***********"
ifeq ($(OS), Linux)
	@touch regression/isochars.suspended regression/unknownWordMessage.suspended
endif
	@echo "***************** Test *****************"
	-$(MAKE) -C compiler JREGROUTPUT=$(JREGROUTPUT) test
	-$(MAKE) -C interpreter JREGROUTPUT=$(JREGROUTPUT) test
	-$(MAKE) -C converter JREGROUTPUT=$(JREGROUTPUT) test


.PHONY: ci
ci: JREGROUTPUT = -xml
ci: UNITOUTPUT = --xml TEST
ci: buildnumbers all packages

###########################################################
# Snapshot boiler plate - specifics in Makefile.<platform>
#
snapshot: buildnumbers snapshot-build snapshot-upload
	@echo "******** Target: $@ ***********"


##################################################
# Build designations:
#   BUILDNUMBER is just the number
#   BUILDVERSION includes a dash, if no-empty, so can be used with $(VERSION)$(BUILDVERSION)
#   BUILDNAME is "Build"$(BUILDNUMBER), e.g. "Build1667"
#
# You can call 'buildnumbers' to pick up the latest build from Jenkins, you can also
# set a BUILDNUMBER and then call it which will set the other dependent values correctly

.PHONY: buildnumbers
buildnumbers: buildnumber
	$(eval BUILDVERSION := -$(BUILDNUMBER))
	$(eval BUILDNAME := Build$(BUILDNUMBER))
	@echo BUILDNUMBER = $(BUILDNUMBER)
	@echo BUILDVERSION = $(BUILDVERSION)


buildnumber:
ifeq ($(BUILDNUMBER),)
	@echo "Getting BUILDNUMBER from Jenkins (should only happen when not building on Jenkins@thoni64)"
	$(eval BUILDNUMBER := $(shell wget -q -O- 'ci.alanif.se:8080/job/Alan/api/xml?xpath=*/lastSuccessfulBuild/number' | $(XPATH) 'number/text()'))
endif

.PHONY: x
x:
	@echo BUILDNUMBER = $(BUILDNUMBER)
	@echo BUILDVERSION = $(BUILDVERSION)
	@echo BUILDNAME = $(BUILDNAME)
	@echo PACKAGE=$(PACKAGE)

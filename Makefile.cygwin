#######################################################################
# This Makefile is the top level for building the Alan System.
# It only works on ThoNi's machine.
#######################################################################

VERSION	:= `venum alan -print '$$v_$$r{s$$s|_}$$c'`
DISTDIR	:= ~/Utveckling/Alan/alanweb/downloads

XPATH = xpath

default: unit build

.PHONY: all
all: unit build documentation tests

.PHONY: ci
ci: JREGROUTPUT = -xml
ci: UNITOUTPUT = --xml TEST
ci: BUILDNUMBER = $(shell cat BUILD_NUMBER)
ci: buildnumbers all zip setup lib

.PHONY:tests
tests: test cygwintests

.PHONY: cygwintests
cygwintests:
	@java -jar bin/jregr.jar -bin bin -dir regression/winalan $(JREGROUTPUT)
	@java -jar bin/jregr.jar -bin bin -dir regression/versions/interpreter $(JREGROUTPUT)

.PHONY: release
release:
	@if ! git --no-pager diff --exit-code --quiet ; then \
		echo "Commit changes before making a release" ; \
		exit 1 ; \
	else if ! git --no-pager diff --exit-code --quiet --cached ; then \
		echo "Commit cached changes before making a release" ; \
		exit 1 ; \
	else if ! [[ -z `git rev-list @{upstream}.. -n 1` ]] ; then \
		echo "Push all local changes before making a release" ; \
		exit 1 ; \
	fi fi fi
	$(MAKE) -f Makefile.thoni releasebuild
	$(MAKE) -f Makefile.thoni test
	$(MAKE) -f Makefile.thoni documentation
	$(MAKE) -f Makefile.thoni packages
	$(MAKE) -f Makefile.thoni tags
	$(MAKE) -f Makefile.thoni sync_all


.PHONY: snapshot-build
snapshot-build:
	@echo "ERROR: Don't build snapshots on thoni, that should be done using Jenkins"
	exit 2


.PHONY: snapshot-upload
snapshot-upload: buildnumbers
	ssh alanif.se "mkdir /www/downloads/snapshots/$(BUILDNAME)"
	alanupload alan$(VERSION)$(BUILDVERSION).win32.x86.zip snapshots/$(BUILDNAME)/
	alanupload alan$(VERSION)$(BUILDVERSION).win32.x86.setup.exe snapshots/$(BUILDNAME)/
	alanupload winarun$(VERSION)$(BUILDVERSION).win32.x86.setup.exe snapshots/$(BUILDNAME)/
	alanupload library/library*.zip snapshots/$(BUILDNAME)/
	alanupload doc/manual/manual.pdf snapshots/$(BUILDNAME)/
	alanupload doc/manual/conversion.pdf snapshots/$(BUILDNAME)/
	alanupload doc/manual/writing.pdf snapshots/$(BUILDNAME)/


# Create pdf from odt
.PHONY: documentation
documentation:
	@echo "******** Target: $@ ***********"
	$(MAKE) documents

.PHONY: documents
documents: doc/manual/manual.pdf doc/manual/conversion.pdf doc/manual/writing.pdf

doc/manual/manual.pdf: doc/manual/manual.odt
	"/cygdrive/c/Program Files/OpenOffice 4/program/swriter" "macro:///Standard.Module1.ConvertWordToPDF(C:\Users\Thomas\Utveckling\Alan\alan\doc\manual\manual.odt)"

doc/manual/conversion.pdf: doc/manual/conversion.odt
	"/cygdrive/c/Program Files/OpenOffice.org 3/program/swriter" "macro:///Standard.Module1.ConvertWordToPDF(C:\Users\Thomas\Utveckling\Alan\alan\doc\manual\conversion.odt)"

doc/manual/writing.pdf: doc/manual/writing.odt
	"/cygdrive/c/Program Files/OpenOffice.org 3/program/swriter" "macro:///Standard.Module1.ConvertWordToPDF(C:\Users\Thomas\Utveckling\Alan\alan\doc\manual\writing.odt)"

.PHONY: releasebuild
releasebuild:
	cd compiler ; make release
	cd interpreter ; make release
	cd converter ; make release
	cd library ; make release

include Makefile.common

.PHONY: tags
tags: last-release
	git tag -a -f v$(VERSION)_$(OS)
	@echo "If you are satisfied with the result, and on thoni's machine, do a 'venum alan correction', at least"

.PHONY: last-release
last-release:
	echo -n $(VERSION) > LASTRELEASE



#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#
# Create all source for porting, should be done in an exported directory
#
.PHONY: srcdist
srcdist:
	@if test -d CVS; then \
		echo Do not do this in your working directory, export first ; \
		exit 1 ; \
	fi
	venum -write always -all alan
	cp version.h alan.version.[ch] compiler
	cp version.h alan.version.[ch] interpreter
	cp compiler/spa.* interpreter
	-rm -r regression/pre3 regression/special
	/usr/bin/find . -name \* -exec chmod u+w \{\} \;
	/usr/bin/find . -name Makefile\* -exec dos2unix \{\} \;
	/usr/bin/find . -name \*.\[ch\] -exec dos2unix \{\} \;
	tar zcvf alansrc$(VERSION).tgz compiler interpreter converter regression COPYING bin/regr bin/jregr bin/jregr.jar
	-rm $(DISTDIR)/Source/alansrc*.*
	cp alansrc$(VERSION).tgz $(DISTDIR)/Source

.PHONY: newVersion
newVersion:
	venum alan
	cvs commit -m 'New Version' alan.version

.PHONY: packages
packages: zip setup gargoyle doc/manual/manual.pdf 
	@echo "******** Target: $@ ***********"
	cp alan$(VERSION).win32.x86.zip $(DISTDIR)/sdks/windows
	cp alan$(VERSION).win32.x86.setup.exe $(DISTDIR)/sdks/windows
	cp winarun$(VERSION).win32.x86.setup.exe $(DISTDIR)/interpreters/windows
	cp gargoyle-alan3-$(VERSION).win32.x86.setup.exe $(DISTDIR)/interpreters/windows
	cp doc/manual/manual.pdf $(DISTDIR)/documentation

#################################################################################

.PHONY: zip
zip: doc/manual/manual.pdf bin/alan.exe bin/arun.exe alan.readme.txt CHANGES.txt alan.readme.windows.txt games/adventv3/adventV3.a3c regression/saviour.alan regression/logo.png COPYING 
	@echo "******** Target: $@ ***********"
	-rm alan*.zip
	zip -j alan$(VERSION)$(BUILDVERSION).win32.x86.zip $^

.PHONY: setup
setup: COPYING.txt CHANGES.txt alan.readme.txt alan.readme.windows.txt converter/a2a3.readme.txt
	@echo "******** Target: $@ ***********"
	-rm winarun*setup.exe
	sed -e s/VERSION/$(VERSION)$(BUILDVERSION)/ winarun.iss > winarun_tmp.iss
	/cygdrive/c/Program\ Files/Inno\ Setup\ 5/iscc winarun_tmp.iss
	-rm winarun_tmp.iss
	-rm alan*setup.exe
	sed -e s/VERSION/$(VERSION)$(BUILDVERSION)/ alan.iss > alan_tmp.iss
	/cygdrive/c/Program\ Files/Inno\ Setup\ 5/iscc alan_tmp.iss
	-rm alan_tmp.iss
	-rm COPYING.txt CHANGES.txt alan.readme.txt alan.readme.windows.txt converter/a2a3.readme.txt

.PHONY: sync_all
sync_all:
	#cd /cygdrive/c/Program/FullSync; ./fullsync -r "AlanIF All Downloads"
	#/cygdrive/c/Program/Siber\ Systems/GoodSync/GoodSync.exe sync "AlanIF Downloads" /exit /unatt /forcetray

.PHONY: sync_snapshots
sync_snapshots:
	#cd /cygdrive/c/Program/FullSync; ./fullsync -r "AlanIF Snapshots"
	#/cygdrive/c/Program/Siber\ Systems/GoodSync/GoodSync.exe sync "AlanIF Snapshots" /exit /unatt /forcetray

games/adventv3/adventV3.a3c: games/adventv3/adventV3.alan bin/alan
	cd games/adventv3; ../../bin/alan adventv3

COPYING.txt: COPYING
	unix2dos >$@ <$<

CHANGES.txt: CHANGES
	unix2dos >$@ <$<

alan.readme.txt: alan.readme
	unix2dos >$@ <$<

alan.readme.windows.txt: alan.readme.windows
	unix2dos >$@ <$<

converter/a2a3.readme.txt: converter/a2a3.readme
	unix2dos >$@ <$<

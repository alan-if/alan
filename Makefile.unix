# Top level Makefile for Alan
#
# To build do 'make'
# To make sure the sources are available (generated sources) do 'make src'
# To build from the current sources only do 'make fromsrc'
# You can also create other platforms by doing 'make <platform>'
#	sometimes this creates an archive sometimes it builds from the
#	current sources, etc. 

SOLARIS2= wolf
SOLARIS1= lion
HP	= frog
SUN4	= lion
SUN3	= slug

ARCHS	= SOLARIS2 SOLARIS1 HP

VERSIONFILE	= `ls [0-9]*_[0-9]*_[0-9]*.*`
VERSION		= `ls [0-9]*_[0-9]*_[0-9]*.* | tail -1 | sed s/\\\\.//g | sed s/_//g`
LASTRELEASE	= `cat LASTRELEASE`

TMPSRC	= /tmp/alansrc

all:
	cd compiler; $(MAKE) -k
	cd interpreter; $(MAKE) -k

arch:
	@echo Building for `arch`
	cd compiler; $(MAKE) -k `arch`
	cd interpreter; $(MAKE) -k `arch`

src: version
	cd compiler; $(MAKE) src
	cd interpreter; $(MAKE) src

.PHONY: fromsrc
fromsrc:
	cd compiler; $(MAKE) fromsrc
	cd interpreter; $(MAKE) fromsrc

sun4:
	cd compiler; $(MAKE) sun4
	cd interpreter; $(MAKE) sun4

hp:
	@if test `arch` != hp ; then \
	    echo "You're not on an HP!" ; \
	    exit 1; \
	fi
	cd compiler; gmake -k hp
	cd interpreter; gmake -k hp

vms: src
	ftp gollum < vms_copying.ftp
	echo "Ok, rlogin and compile using @make !!"
	rlogin gollum

mac:
	-rm alansrc*mac.sit
	echo "Creating MAC sources for `cat LASTRELEASE`!"
	cvs rtag -b -F -r v$(LASTRELEASE) v$(LASTRELEASE)mac alan &
	cvs export -r v$(LASTRELEASE) -d $(TMPSRC) alan/version.sh alan/compiler alan/interpreter
	echo "Checked out from tag v$(LASTRELEASE)" >$(TMPSRC)/TAG
	mv $(TMPSRC)/version.sh $(TMPSRC)/alan
	cd $(TMPSRC)/alan/compiler; $(MAKE) mac
	cd $(TMPSRC)/alan/interpreter; $(MAKE) mac
	-cd $(TMPSRC); mv alan/compiler/compiler.sit .; mv alan/interpreter/interpreter.sit .
	-cd $(TMPSRC); sit compiler.sit interpreter.sit
	mv $(TMPSRC)/archive.sit alansrc$(LASTRELEASE)mac.sit
	\rm -rf $(TMPSRC)
	@echo Compile it using THINK-C!!

amiga:
	-rm alansrc*amiga.lha
	echo "Creating Amiga sources for `cat LASTRELEASE`!"
	cvs rtag -b -F -r v$(LASTRELEASE) v$(LASTRELEASE)amiga alan &
	cvs export -r v$(LASTRELEASE) -d $(TMPSRC) alan/version.sh alan/compiler alan/interpreter
	echo "Checked out from tag v$(LASTRELEASE)" >$(TMPSRC)/TAG
	mv $(TMPSRC)/alan/version.sh $(TMPSRC)
	cd $(TMPSRC)/compiler; $(MAKE) amiga
	cd $(TMPSRC)/interpreter; $(MAKE) amiga
	cd $(TMPSRC); lha c alansrcamiga.lha compiler/compiler.lha interpreter/interpreter.lha
	mv $(TMPSRC)/alansrcamiga.lha alansrc$(LASTRELEASE)amiga.lha
	\rm -rf $(TMPSRC)
 
pc:
	-rm alansrc*pc.zip
	echo "Creating PC sources for `cat LASTRELEASE`!"
	cvs rtag -b -F -r v$(LASTRELEASE) v$(LASTRELEASE)pc alan &
	cvs export -r v$(LASTRELEASE) -d $(TMPSRC) alan/version.sh alan/compiler alan/interpreter
	echo "Checked out from tag v$(LASTRELEASE)" >$(TMPSRC)/TAG
	mv $(TMPSRC)/alan/version.sh $(TMPSRC)
	cd $(TMPSRC)/compiler; $(MAKE) pc
	cd $(TMPSRC)/interpreter; $(MAKE) pc
	cd $(TMPSRC); zip -k -u alansrcpc.zip compiler/compiler.zip interpreter/interpreter.zip
	mv $(TMPSRC)/alansrcpc.zip alansrc$(LASTRELEASE)pc.zip
	\rm -rf $(TMPSRC)

linux:
	-rm alansrc*linux*
	echo "Creating Linux sources for `cat LASTRELEASE`!"
	cvs rtag -b -F -r v$(LASTRELEASE) v$(LASTRELEASE)linux alan &
	cvs export -r v$(LASTRELEASE) -d $(TMPSRC) alan
	echo "Checked out from tag v$(LASTRELEASE)" >$(TMPSRC)/TAG
	cd $(TMPSRC); make src
	cp LASTRELEASE $(TMPSRC)/..
	cd $(TMPSRC)/..; \
		tar cvf alansrc$(LASTRELEASE)linux.tar alansrc;	\
		gzip alansrc$(LASTRELEASE)linux.tar
	mv $(TMPSRC)$(LASTRELEASE)linux.tar.gz .
	\rm -rf $(TMPSRC)

release:
	@if cvs status 2> /dev/null | egrep Status | egrep -v Up-to-date ; then \
		exit 1 ; \
	fi
	@make newVersion
	# Test for fresh binaries
	@if test -f .notfresh ; then rm .notfresh ; fi
	cd compiler ; make release
	cd interpreter ; make release
	@if test -f .notfresh ; then exit 1 ; fi
	# Make an automatic changelog entry
	date > changelog.tmp
	echo >> changelog.tmp
	echo "	* v"`venum | awk '{print $$6}'` >> changelog.tmp
	echo >> changelog.tmp
	cat ChangeLog >> changelog.tmp
	echo >> changelog.tmp
	mv changelog.tmp ChangeLog
	cvs commit -m 'New Version' ChangeLog
	cp ChangeLog $(ALANDIR)/ChangeLog
	# Set the tags
	cvs rtag -F v$(VERSION) alan 
	cvs rtag -F -b v$(VERSION)_branch alan
	echo $(VERSION) > LASTRELEASE
	cvs commit -m 'New Version' LASTRELEASE
	-rm -r $(ALANDIR)/[0-9]*_[0-9]*_[0-9]*.*; cp $(VERSIONFILE) $(ALANDIR)
	# Increment correction number
	venum . +c
	mv $(VERSIONFILE) $(VERSION).a
	make newVersion
	echo You can build sources for Amiga, PC, Mac and Linux by 'make <target>'

RELEASE:
	@echo Do:
	@echo 	cd $ALANDIR/distribution
	@echo 	make DISTRIBUTION

version: version.sh
	-rm [0-9]*_[0-9]*_[0-9]*
	sh version.sh

newVersion: 
	venum
	echo "cat > `ls [0-9]*_[0-9]*_[0-9]*.* ` <<EOF" > version.sh
	echo "Alan" >> version.sh
	echo "Adventure Language System" >> version.sh
	echo "EOF" >> version.sh
	cvs commit -m 'New Version' version.sh


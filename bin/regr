#!/usr/bin/env bash
#
# Script for regression testing of Responsives Developer Training Camp
# Files:
#   .regr - the command to be run using the case name as the single arg
#           also indicates that this directory should be recursed into
#   .case - the extension (including period) to be considered test cases
#           if available indicates that there are cases in this directory
#
/bin/echo "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>" > TEST-regr.xml
/bin/echo "<testsuite name=\"regr\">" >> TEST-regr.xml
dir=`basename "$PWD"`

run ()
{
    echo -n "$theCase : "
    if [ ! -f $theCase.suspended ]
    then
	echo "########## $theCase ##########" >$theCase.output
	./.regr $theCase >>$theCase.output 2>&1
	theCases=`expr $theCases + 1`
    fi
}

verify()
{
    /bin/echo "<testcase name=\"$theCase\" classname=\"$dir\">" >> TEST-regr.xml
    if [ -f $theCase.suspended ]
    then
	suspended=`expr $suspended + 1`
	echo "Suspended..."
    else if [ -f $theCase.expected ]
    then
	if diff -q -b $theCase.output $theCase.expected 1> /dev/null
	then
	    ok=`expr $ok + 1`
            if [ $interactive = 1 ] ; then
	        #tput ce #- This should really work, but doesn't on cygwin ;-( so we need to do the following three lines instead
	        tput cr
	        /bin/echo -n "                                                            "
	        tput cr
            else
	        echo "ok"
	    fi
	    rm $theCase.output
	else
	    failed=`expr $failed + 1`
	    /bin/echo "*** FAILED!!! ***"
	    /bin/echo -n  "<failure message=\"Output does not match expected\">" >> TEST-regr.xml
	    diff -c -b $theCase.output $theCase.expected 1>> TEST-regr.xml
	     /bin/echo -n "</failure>" >> TEST-regr.xml
	fi
    else
	new=`expr $new + 1`
	/bin/echo -n  "<error type=\"New\" message=\"No expected output defined for case '$theCase'\">" >> TEST-regr.xml
	/bin/echo "The file '$theCase.output' does not exist" >> TEST-regr.xml
	/bin/echo -n "</error>" >> TEST-regr.xml
	/bin/echo "NEW!"
    fi
    fi
    /bin/echo "</testcase>" >> TEST-regr.xml
}

recurse()
{
  for d in *; do
    if [ -d $d ]
    then
	if [ -f $d/.regr ]
	then
	    echo "Recursing: $d"
	    cd $d; regr; cd ..
	    echo "Leaving: $d"
	fi
    fi
  done
}

runselected()
{
  for f in ${*} ; do
    theCase=`basename $f $ext`
    if [ "$theCase" != "$f" ]
    then
      run
      verify
    elif [ -f $theCase$ext ]
      then
	run
	verify
    fi
  done
}

theCases=0
ok=0
failed=0
suspended=0
new=0

interactive=0
if [ $# -gt 0 ] ; then
  if [ "$1" = "-n" ] ; then
    interactive=0
    shift
  elif [ "$1" = "-i" ] ; then
    interactive=1
    shift
  else
    echo "Unknown switch '$1', '-n' for non-interactive, '-i' for interactive output mode"
    exit
  fi
fi

if [ $# = 0 ] ; then
  recurse
fi

if [ -f .case ] ; then
  ext=`cat .case`
  if [ $# != 0 ] ; then
    runselected ${*}
  else
    if [ -f .regr ]
    then
      for f in *$ext ; do
	theCase=`basename $f $ext`
	run
	verify
      done
    fi
  fi
  if test $new -ne 0
  then
    echo -n "$new new, "
  fi
  if test $suspended -ne 0
  then
    echo -n "$suspended suspended, "
  fi
  if test $failed -eq 0
  then
    if test $new -eq 0
    then
      echo All $theCases OK!
    else
      echo $ok OK!
    fi
  else
    echo "*** $failed FAILED! ***"
  fi
else
  echo No cases to run in `pwd`
fi

/bin/echo "</testsuite>" >> TEST-regr.xml

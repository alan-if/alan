#include <cgreen/mocks.h>

#include "cnt_x.h"

/* USE: */
#include "wht.h"
#include "context.h"


/* DATA: */


/* FUNCTIONS: */

/* Mocked */
ContainerBody *newContainerBody(Srcp srcp, Bool opaque, Id *takes, List *lims, List *hstms, List *estms, List *extractChecks, List *extractStatements) { ContainerBody *cnt = NEW(ContainerBody); cnt->srcp = srcp; cnt->taking = takes; cnt->limits = lims; cnt->hstms = hstms; cnt->estms = estms; cnt->extractChecks = extractChecks; cnt->extractStatements = extractStatements; return cnt; }
Container *newEmptyContainer(void) { return NEW(Container); }
Container *newContainer(ContainerBody *info) { return (Container*)mock(info); }
void symbolizeContainer(Container *cnt) { mock(cnt); }
void verifyContainerForInitialLocation(What *wht, Context *context, char construct[]) { mock(wht, context, construct); }
void analyzeContainer(Container *cnt, Context *context) { mock(cnt, context); }
void numberContainers(void) {}
Aaddr generateContainers(ACodeHeader *header) { return (Aaddr)mock(header); }
void dumpContainer(Container *container) { mock(container); }

/* Duplicated */
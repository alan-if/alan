--From saturn.cs.mun.ca!byron@garfield.cs.mun.ca Wed Mar 31 16:31:31 1993
--Date: 	Wed, 31 Mar 1993 10:28:32 -0330
--From: Byron Montgomerie <byron@saturn.cs.mun.ca>
--To: gorfo@ida.liu.se, thoni@softlab.se
--Subject: Alan Compiler Bug (Source included)
--Content-Length: 13533
--
--
--Hi, the folowing code crashes the alan compiler for both the sun and amiga
--versions, thought you might like to see it to figure out what's wrong. You are
--welcome to use any or part of it as example code.  It is not a game as such,
--more of an exploration of how to get alan to do certain things.
--
--Byron...
-- __________________________________________________________________________
--| __  ///    "Byron Montgomerie"  Internet: byron@odie.cs.mun.ca   __  /// |
--| \\\///      "Does anybody here remember Vera Lynn?               \\\///  |
--|  \XX/        How she said that we would meet again,               \XX/   |
--|  Amiga       some sunny day..." -- Pink Floyd --                 Amiga   |
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--
-----cut here-----
OPTIONS

	PACK.

OBJECT ATTRIBUTES
	NOT takeable.
	take_refuse_msg "You can't take that.".
	--Weight in english pounds.--
	weight 0.
	--Size in cubic centimeters. As if carried in both arms.--
	length 0.
	width 0.
	height 0.
	position "on the ground".
        general_details "You see nothing special.".
	interior_details "You can't look in that.".
	nether_details "You can't look under that.".
	astral_details "You can't look on top of that.".

ACTOR ATTRIBUTES
	NOT takeable.
	take_refuse_msg "You can't take that.".
	weight 150.
	length 150.
	width 40.
	height 20.
        general_details "You see nothing special.".
	interior_details "You can't look in that.".
	nether_details "You can't look under that.".
	astral_details "You can't look on top of that.".

SYNTAX  'quit'          = 'quit'.
	'save'          = 'save'.
	'restore'       = 'restore'.

	'look'          = 'look'.
	 look_at        = 'look' 'at' (Obj).
	 examine        = 'examine' (Obj).

	 look_in	= 'look' 'in' (Obj)
		WHERE Obj ISA CONTAINER OBJECT 
			ELSE SAY interior_details OF Obj.
	 look_under     = 'look' 'underneath' (Obj).
	 look_over	= 'look' 'over' (Obj).
	 look_on_top_of = 'look' 'on' 'top' 'of' (Obj).

	 get            = 'get' (Obj)*
		WHERE Obj ISA OBJECT
			ELSE "Why don't you just talk to $o?"

	 put            = 'put' (Obj)*.
	 put_in		= 'put' (Obj1)* 'in' (Obj2)
		WHERE Obj1 ISA OBJECT
			ELSE "How would you like it if someone tried to do
			      that to you?"
		AND Obj2 ISA CONTAINER OBJECT
			ELSE 
			"You have to tell me how to put the $1 in the $2."
	 put_on		= 'put' (Obj1)* 'on' (Obj2)
		WHERE Obj1 ISA OBJECT
			ELSE "How would you like it if someone tried to do
			      that to you?"
		AND Obj2 ISA OBJECT
			ELSE "$2 would rather you didn't."
	 put_under		= 'put' (Obj1)* 'underneath' (Obj2)
		WHERE Obj1 ISA OBJECT
			ELSE "How would you like it if someone tried to do
			      that to you?"
		AND Obj2 ISA OBJECT
			ELSE "$2 would rather you didn't."
	 put_next_to		= 'put' (Obj1)* 'next' 'to' (Obj2)
		WHERE Obj1 ISA OBJECT
			ELSE "How would you like it if someone tried to do
			      that to you?"
		AND Obj2 ISA OBJECT
			ELSE "$2 would rather you didn't."
	 put_in_front_of	= 'put' (Obj1)* 'in' 'front' 'of' (Obj2)
		WHERE Obj1 ISA OBJECT
			ELSE "How would you like it if someone tried to do
			      that to you?"
		AND Obj2 ISA OBJECT
			ELSE "$2 would rather you didn't."
	 put_behind	= 'put' (Obj1)* 'behind' (Obj2)
		WHERE Obj1 ISA OBJECT
			ELSE "How would you like it if someone tried to do
			      that to you?"
		AND Obj2 ISA OBJECT
			ELSE "$2 would rather you didn't."

	 pry_back	= 'pry' 'back' (Obj).

	 take_inventory = 'inventory'.

SYNONYMS
	u = up.
	d = down.
	n = north.
	e = east.
	s = south.
	w = west.
--	ne = northeast.
--	nw = northwest.
--	se = southeast.
--	sw = southwest.

	q = 'quit'.
	l = 'look'.
	take = get.
	drop = put.
	x, exam = examine.
	i, invent = inventory.
	through, into, inside = 'in'.
	under,below = underneath.
	apart, away = back.

---------------
--Sytem Verbs--
---------------

VERB 'save' DOES
	SAVE.
	"Saved."
END VERB.

VERB 'restore' DOES
	"Restoring..."
	RESTORE.
	LOOK.
END VERB.

VERB 'quit' DOES
	QUIT.
END VERB.

--------------
--User Verbs--
--------------

VERB 'look' DOES
	LOOK.
END VERB.

VERB look_at, examine DOES
	SAY general_details OF Obj.
END VERB.

VERB look_in DOES
	IF interior_details OF Obj = "CONTAINER" THEN
		LIST Obj.
	ELSE    SAY interior_details OF Obj.
	END IF.
END VERB.

VERB look_under DOES
	SAY nether_details OF Obj.
END VERB.

VERB look_over, look_on_top_of DOES
	SAY astral_details OF Obj.
END VERB.

VERB put DOES
	IF Obj NOT IN inventory THEN
		"You don't have that."
	ELSE 	LOCATE Obj HERE.
		SET position OF Obj TO "on the ground".
		"You drop the $o."
	END IF.
END VERB put.

VERB put_in DOES
	IF Obj1 NOT IN inventory THEN
		IF Obj1 IS takeable THEN
			LOCATE Obj1 IN inventory.
			"You take the $o."
		END IF.
	END IF.
	IF Obj1 NOT IN inventory THEN
		SAY take_refuse_msg OF Obj1.
	ELSE LOCATE Obj1 IN Obj2.
	     SET position OF OBJ1 TO "in $2".
	     "You put the $1 in the $2."
	END IF.
END VERB put_in.
	
VERB put_on DOES
	IF Obj1 NOT IN inventory THEN
		IF Obj1 IS takeable THEN
			LOCATE Obj1 IN inventory.
			"You take the $o."
		END IF.
	END IF.
	IF Obj1 NOT IN inventory THEN
		SAY take_refuse_msg OF Obj1.
	ELSE SET position OF Obj1 TO "on $2".
	     "You put the $1 on the $2."
	END IF.
END VERB put_on.

VERB put_under DOES
	IF Obj1 NOT IN inventory THEN
		IF Obj1 IS takeable THEN
			LOCATE Obj1 IN inventory.
			"You take the $o."
		END IF.
	END IF.
	IF Obj1 NOT IN inventory THEN
		SAY take_refuse_msg OF Obj1.
	ELSE SET position OF Obj1 TO "under $2".
	     "You put the $1 under the $2."
	END IF.
END VERB put_under.

VERB put_next_to DOES
	IF Obj1 NOT IN inventory THEN
		IF Obj1 IS takeable THEN
			LOCATE Obj1 IN inventory.
			"You take the $o."
		END IF.
	END IF.
	IF Obj1 NOT IN inventory THEN
		SAY take_refuse_msg OF Obj1.
	ELSE SET position OF Obj1 TO "next to $2".
	     "You put the $1 next to the $2."
	END IF.
END VERB put_next_to.

VERB put_in_front_of DOES
	IF Obj1 NOT IN inventory THEN
		IF Obj1 IS takeable THEN
			LOCATE Obj1 IN inventory.
			"You take the $o."
		END IF.
	END IF.
	IF Obj1 NOT IN inventory THEN
		SAY take_refuse_msg OF Obj1.
	ELSE SET position OF Obj1 TO "in front of $2".
	     "You put the $1 in front of the $2."
	END IF.
END VERB put_in_front_of.

VERB put_behind DOES
	IF Obj1 NOT IN inventory THEN
		IF Obj1 IS takeable THEN
			LOCATE Obj1 IN inventory.
			"You take the $o."
		END IF.
	END IF.
	IF Obj1 NOT IN inventory THEN
		SAY take_refuse_msg OF Obj1.
	ELSE SET position OF Obj1 TO "behind $2".
	     "You put the $1 behind the $2."
	END IF.
END VERB put_behind.

VERB get DOES
	IF Obj IS takeable THEN
		LOCATE Obj IN inventory.
		SET position OF Obj TO "in inventory".
		"You take the $o."
	ELSE SAY take_refuse_msg OF Obj.
	END IF.
END VERB get.

VERB take_inventory DOES
	LIST inventory.
END VERB take_inventory.

CONTAINER inventory
	LIMITS  weight 50 THEN
		"You can't carry any more weight."
		height 80 THEN 
		"You wouldn't be able to see where you are going,
		 carrying all that."
		width 45 THEN
		"Your load would be too awkward to carry."
	HEADER
		"You are carrying "
	ELSE    "You are empty-handed."
END CONTAINER inventory.

------------------------
--Location definitions--
------------------------

OBJECT begin_door NAME an 'iron-clad' oak door AT starting

	IS
		NOT open.

	HAS general_details
	"This is a huge oaken door, easily 12 feet tall, it has ornate bands
	 of cast iron an inch thick running across it from the hinges.".

	HAS nether_details
	"From below the door you can see an empty room beyond.".

	HAS default_nether_details
	"From below the door you can see an empty room beyond.".

	DESCRIPTION
		"There is a huge door to the north."
		IF begin_door IS open
		THEN "It is open."
		ELSE "It is closed."
		END IF.

	VERB open DOES
		IF begin_door IS NOT open THEN 
			"The door opens with a errie creaking sound."
			MAKE begin_door open.
			MAKE end_door open.
			SET nether_details OF begin_door TO 
				"You see nothing special.".
			SET nether_details OF end_door TO 
				"You see nothing special.".
		ELSE "It is already open."
		END IF.
	END VERB open.

	VERB close DOES
		IF begin_door IS open THEN
			"The door closes with a loud BANG!"
			MAKE begin_door NOT open.
			MAKE end_door NOT open.
			SET nether_details OF begin_door TO 
				default_nether_details OF begin_door.
			SET nether_details OF end_door TO 
				default_nether_details OF end_door.
		ELSE "It is already closed."
		END IF.
	END VERB close.

END OBJECT begin_door.

OBJECT end_door NAME 'iron-clad' oak door AT porch

	IS NOT open.

	HAS general_details 
	"This is a huge oaken door, easily 12 feet tall, it has ornate bands
	 of cast iron an inch thick running across it from the hinges.".

	HAS nether_details
	"From below the door you can see an empty room beyond.".

	HAS default_nether_details
	"From below the door you can see an empty room beyond.".

	DESCRIPTION
		"There is a huge door to the south."
		IF end_door IS open
		THEN "It is open."
		ELSE "It is closed."
		END IF.

	VERB open DOES
		IF end_door IS NOT open THEN
			"The door opens with a errie creaking sound."
			MAKE end_door open.
			MAKE begin_door open.
			SET nether_details OF begin_door TO 
				"You see nothing special.".
			SET nether_details OF end_door TO 
				"You see nothing special.".
		ELSE "It is already open."
		END IF.
	END VERB open.

	VERB close DOES
		IF end_door IS open THEN
			"The door closes with a loud BANG!"
			MAKE end_door NOT open.
			MAKE begin_door NOT open.
			SET nether_details OF begin_door TO 
				default_nether_details OF begin_door.
			SET nether_details OF end_door TO 
				default_nether_details OF end_door.
		ELSE "It is already closed."
		END IF.
	END VERB close.

END OBJECT end_door.

OBJECT scroll1 NAME musty scroll

	IS takeable.

	HAS length 30.
	HAS width 10.
	HAS height 4.
	HAS position "in step".

	HAS general_details
		"The parchment is old and rather musty, 
		 there is some writing on it.".

	MENTIONED
		"a Scroll of Admittance"

	VERB read DOES
		IF scroll1 IN inventory THEN
		"The words are blurred and scuffed but the runes
			$pWGreLth
		 $n$nstand out clearly."
		SCORE 1.
		ELSE "I can't read that from here."
		END IF.
	END VERB read.

END OBJECT scroll1.

OBJECT 'broken_step' NAME broken 'step' AT stairs
	CONTAINER
	LIMITS  height 10 THEN
		"The $o won't fit in there."
		width 10 THEN
		"The $o won't fit in there."
		length 100 THEN
		"The $o won't fit in there."

	HEADER "Within the space of the step is"

	IS NOT open.
	IS NOT found.

	HAS general_details
		"The step is warped and is sad need of repair.".

	HAS interior_details
		"You can't make out anything in the step, it's too dark.".

	DESCRIPTION
		IF 'broken_step' IS found THEN
			IF 'broken_step' IS NOT open THEN
			"$nThe step you are on seems warped, one end 
			   is bent upward an inch, pulling some nails along 
			   with it."
			ELSE "$nThe step below you has been pried back to 
				reveal an empty hollow beneath."
				LIST 'broken_step'.
			END IF.
		END IF.

	VERB pry_back DOES
		"You pry back the wood of the step."
		SCORE 1.
		MAKE 'broken_step' open.
		LOCATE scroll1 IN 'broken_step'.
		SET interior_details OF 'broken_step' TO  "CONTAINER".
	END VERB.

	VERB examine, look_at DOES
		MAKE 'broken_step' found.
		DESCRIBE 'broken_step'.
	END VERB.

END OBJECT 'broken_step'.

LOCATION starting NAME The Beginning

	DESCRIPTION
		"In the beginning, there was the void..."

	EXIT north TO porch
		CHECK begin_door IS open
		ELSE "The door is closed."
	END EXIT.

END LOCATION starting.

LOCATION porch NAME 'The End'

	DESCRIPTION
		"At the end of time, there was void again...
		 There is a staircase to the east leading up."

	EXIT south TO starting
		CHECK end_door IS open
		ELSE "The door is closed."
	END EXIT.

	EXIT east TO stairs.

END LOCATION porch.

LOCATION stairs NAME 'Staircase'

	HAS section 0.
	HAS top 5.
	HAS hidden_section 5.

	DESCRIPTION
		"You are "
		IF section OF stairs = 0 THEN
			"at the bottom of a long and winding 
			 staircase which opens to the west."
		ELSIF section OF stairs = top OF stairs THEN
			"on top of a long and winding staircase.
			 There is nowhere else to go except down."
		ELSE    "on a long and winding staircase."
		END IF.

	EXIT west TO porch
		CHECK section OF stairs = 0
		ELSE "You can't go that way."
	END EXIT.

	EXIT up TO stairs
		CHECK
			IF section OF stairs < top OF stairs THEN
				INCREASE section OF stairs.
				"You climb up a few flights of stairs." 
				IF section OF stairs = top OF stairs THEN
					"You have reached the top!"
				END IF.
			ELSE "You are at the top of the stairs, you can't go
 				   up any further."
			END IF.
	END EXIT.

	EXIT down TO stairs
		CHECK  
			IF section OF stairs > 0 THEN
				DECREASE section OF stairs.
				"You climb down a few flights of stairs."
				IF section OF stairs = 0 THEN
					"You have reached the bottom!"
				END IF.
			ELSE "You are at the bottom of the stairs, you can't
 				   go down any further."
			END IF.
			IF section OF stairs = hidden_section OF stairs THEN
				IF 'broken_step' IS NOT open THEN 
					IF 'broken_step' IS NOT found THEN
						"CREAK!"
					END IF.
				ELSE "You trip on a broken step and fall down
					the stairs."
				   "$p   You Have died!"
				   SCORE.
				   QUIT.
				END IF.
			END IF.
	END EXIT.

END LOCATION stairs.

EVENT disaster
	"Pop goes the weasal!"
	SCHEDULE disaster AT HERO AFTER 3.
END EVENT disaster.

START AT starting.
	"Hamburgers make excellent pets!"
	SCHEDULE disaster AT HERO AFTER 3.
	SET hidden_section OF stairs TO RANDOM 2 TO 4.



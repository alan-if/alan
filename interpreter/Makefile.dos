CFLAGS = /Zi /AM

LDFLAGS = /Fb /Fearun 

OBJECTS = arun.obj \
	debug.obj \
	args.obj \
	exe.obj \
	inter.obj \
	parse.obj \
	rules.obj \
	stack.obj \
	decode.obj \
	term.obj \
	reverse.obj \
	params.obj \
	sysdep.obj \
	version.obj


arun.exe : $(OBJECTS)
	cl $(LDFLAGS) $(CFLAGS) $**
	copy arun.exe ..


#---<< GENERATED DEPENDENCIES FOLLOWS >>---
args.obj: args.c args.h main.h types.h sysdep.h acode.h
arun.obj: arun.c main.h types.h sysdep.h acode.h term.h
debug.obj: debug.c types.h sysdep.h acode.h version.h readline.h inter.h \
 main.h parse.h exe.h debug.h
decode.obj: decode.c main.h types.h sysdep.h acode.h decode.h
dumpacd.obj: dumpacd.c types.h sysdep.h acode.h spa.h
exe.obj: exe.c types.h sysdep.h acode.h readline.h main.h parse.h \
 inter.h stack.h decode.h exe.h
genalan.obj: genalan.c spa.h
inter.obj: inter.c types.h sysdep.h acode.h main.h parse.h exe.h stack.h \
 inter.h
main.obj: main.c sysdep.h types.h acode.h main.h readline.h version.h \
 args.h parse.h inter.h rules.h debug.h stack.h exe.h term.h
params.obj: params.c types.h sysdep.h acode.h params.h
parse.obj: parse.c types.h sysdep.h acode.h readline.h main.h inter.h \
 exe.h term.h debug.h params.h parse.h
readline.obj: readline.c readline.h types.h sysdep.h acode.h main.h
reverse.obj: reverse.c types.h sysdep.h acode.h main.h reverse.h
rules.obj: rules.c types.h sysdep.h acode.h main.h inter.h debug.h exe.h \
 stack.h rules.h
spa.obj: spa.c spa.h
stack.obj: stack.c types.h sysdep.h acode.h main.h stack.h
sysdep.obj: sysdep.c sysdep.h
term.obj: term.c main.h types.h sysdep.h acode.h term.h
version.obj: version.c version.h

#######################################################################
include ../mk/include_guard.mk
#
# This makefile is included by all Makefile.<platform> where Windows
# binaries can be made. You can configure where any dependent
# libraries are stored, compiler switches in Makefile.local (which
# should be copied from Makefile.local.template
#
# You can also disable a particular build by commenting out the settings
# of EXTRA_TARGETS.
#

INNODIR = /cygdrive/c/Program\ Files\ \(x86\)/Inno\ Setup\ 5

#######################################################################
# WinArun - Windows GLK interpreter
#
# Define WINGLK_ROOT to enable building
ifdef WINARUN_ENABLED
EXTRA_TARGETS += winarun
else
$(info NOT ENABLED: winarun - WindowsGLK-based Arun)
endif

WINGLK_DEFS = -DHAVE_WINGLK
WINGLK_INCLUDE = -I$(WINGLK_ROOT)/Include
WINGLK_LIB = $(WINGLK_ROOT)/Glk.lib # or -L$(WINGLK_ROOT) -l:Glk.lib

winarun: CFLAGS += $(WINGLK_INCLUDE) $(WINGLK_DEFS)
winarun: EXEEXT = .exe
winarun: LDLIBS += -l:libiconv.a

WINARUNOBJDIR = .winarun
WINARUNOBJECTS = $(addprefix $(WINARUNOBJDIR)/,${WINARUNSRCS:.c=.o}) $(WINARUNOBJDIR)/alan.version.o
-include $(WINARUNOBJECTS:.o=.d)
$(WINARUNOBJECTS): $(WINARUNOBJDIR)/%.o: %.c
	$(COMPILE) -MMD -o $@ -c $<

$(WINARUNOBJDIR):
	mkdir $(WINARUNOBJDIR)

winarun: $(WINARUNOBJDIR) $(WINARUNOBJECTS) winarun.res
	$(LINK) -o $@$(EXEEXT) $(WINARUNOBJECTS) winarun.res $(WINGLK_LIB) $(LDLIBS)
	cp $@$(EXEEXT) ../bin/
	cp $(WINGLK_ROOT)/*.dll ../bin/

winarun.res: winarun.rc winarun.ico resources.h alan.version.c
	sed "s/WINARUNVERSION/$(VERSION)$(BUILDVERSION)/" winarun.rc > winarun.rc2
	$(WINDRES) winarun.rc2 -O coff -o $@


#######################################################################
# Gargoyle for Windows GLK variant
#
# Requires:
#	GARGOYLE_ROOT - Make variable
#       - set to the root of directory for Gargoyle sources
#   libgarglk.dll - file
#       - a garglk link library which is in this repo, which will work as
#         long as the interface does not change. Then it need to be rebuilt
#         from the Gargoyle sources
#
ifdef GARARUN_ENABLED
EXTRA_TARGETS += gargoyle
else
$(info NOT ENABLED: gararun - Gargoyle Arun for Windows)
endif

GARARUNOBJDIR = .gararun
GARARUNOBJECTS = $(addprefix $(GARARUNOBJDIR)/,${GARARUNSRCS:.c=.o}) $(GARARUNOBJDIR)/alan.version.o
-include $(GARARUNOBJECTS:.o=.d)

$(GARARUNOBJECTS): $(GARARUNOBJDIR)/%.o: %.c
	$(COMPILE) -MMD -o $@ -c $<

$(GARARUNOBJDIR):
	mkdir $(GARARUNOBJDIR)

gararun: CFLAGS += -DHAVE_GARGLK -I$(GARGOYLE_ROOT)/garglk
gararun: build-gararun gararun-package gargoyle-updater

.PHONY: build-gararun
build-gararun: alan3.exe

alan3.exe: $(GARARUNOBJDIR) $(GARARUNOBJECTS)
	$(LINK) -o $@ $(GARARUNOBJECTS) libgarglk.dll

.PHONY: gararun-package
gararun-package: build-gararun gargoyle-updater-alan3.readme
	zip -j gargoyle-updater-alan$(VERSION)$(BUILDVERSION).$(PLATFORM).zip alan3.exe gargoyle-updater-alan3.readme

.PHONY: gargoyle-updater
gargoyle-updater: build-gararun gargoyle-updater-alan3.iss
	-rm gargoyle-updater-alan3*setup.exe
	sed -e s/VERSION/$(VERSION)$(BUILDVERSION)/ gargoyle-updater-alan3.iss > gargoyle-updater-alan3_tmp.iss
	$(INNODIR)/iscc gargoyle-updater-alan3_tmp.iss
	rm gargoyle-updater-alan3_tmp.iss

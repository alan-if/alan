OPTIONS
	Language English.

OBJECT ATTRIBUTES
        NOT openable.
        NOT open.
        weight 0.

ACTOR ATTRIBUTES
        x 0.
        y 0.
        weight 0.
        light 0.

-----------------------------------------------------------------------
----                      Guardian of Onddo Morron
-----------------------------------------------------------------------
----            Syntax, synonyms and global verbs definition
-----------------------------------------------------------------------
SYNONYMS
    'e' = 'east'.
    'w' = 'west'.
    'n' = 'north'.
    's' = 'south'.
    'nw' = 'northwest'.
    'ne' = 'northeast'.
    'sw' = 'southwest'.
    'se' = 'southeast'.
    'store' = 'save'.
    'load' = 'restore'.
    'q' = 'quit'.

SYNTAX
    'look' = 'look'.
    'save' = 'save'.
    'restore' = 'restore'.
    'quit' = 'quit'.
    yes = 'yes'.
    no  = 'no'.
    open = 'open' (obj)
           WHERE obj ISA OBJECT
               ELSE "$nYou cannot open that."
    close = 'close' (obj)
           WHERE obj ISA OBJECT
               ELSE "$nYou cannot close that."

------------------------------------------------------------------------
---- Verbs
------------------------------------------------------------------------
VERB 'look'
    DOES
        SET delay_time OF global_data TO 0.
            LOOK.
END VERB 'look'.

VERB 'save'
    DOES
	SAVE.
END VERB 'save'.

VERB 'restore'
    DOES
	RESTORE.
	LOOK.
END VERB 'restore'.

VERB 'quit'
    DOES
        LOCATE questioneer HERE.
        USE SCRIPT 1 FOR questioneer.
END VERB 'quit'.

VERB yes
    CHECK global_data IS waiting_reply
        ELSE "$nYes what ?"
    DOES
        IF expected_reply OF global_data = "yes" THEN
            MAKE global_data answered_right.
        ELSE
            MAKE global_data NOT answered_right.
        END IF.
END VERB yes.

VERB no
    CHECK global_data IS waiting_reply
        ELSE "$nNo what ?"
    DOES
        IF expected_reply OF global_data = "no" THEN
            MAKE global_data answered_right.
        ELSE
            MAKE global_data NOT answered_right.
        END IF.
END VERB no.

VERB open
    CHECK obj IS openable
        ELSE "$nA strange thing to open."
    DOES
        MAKE obj open.
        "$nDone."
END VERB open.

VERB close
    CHECK obj IS openable
        ELSE "$nA strange thing to close."
    DOES
        MAKE obj NOT open.
        "$nDone."
END VERB close.

----------------
LOCATION nowhere
----------------
EXIT north, south, east, west TO nowhere.
END LOCATION nowhere.

---------------------------
LOCATION in_front_of_castle
---------------------------
NAME Outer ward

DESCRIPTION
    "< in front of the castle >"

EXIT north TO inner_ward_entrance
    CHECK castle_gate IS open
        ELSE
            "< portcullis blocks your passage >"
END EXIT.

END LOCATION in_front_of_castle.

------------------------------------------------------------------------
-- Stage 2. Inside Castle wall.
------------------------------------------------------------------------

----------------------------
LOCATION inner_ward_entrance
----------------------------
NAME Castle gate

DESCRIPTION
    "< castle entrance >"

EXIT north TO in_front_of_building.

EXIT south TO in_front_of_castle
    CHECK castle_gate IS open
        ELSE
            "< portcullis blocks your way >"
END EXIT.

END LOCATION inner_ward_entrance.

-----------------------------
LOCATION in_front_of_building
-----------------------------
NAME 'In' front 'of' main building

DESCRIPTION
    "< in front of main building >"

EXIT north TO entrance_foyer
    CHECK castle_door IS open
        ELSE
            "$nOpen the door first."
END EXIT.

EXIT south TO inner_ward_entrance.

EXIT east TO se_inner_ward.

EXIT west TO sw_inner_ward.

END LOCATION in_front_of_building.

----------------------
LOCATION sw_inner_ward
----------------------
NAME Inner ward

DESCRIPTION
    "< south-west corner of inner ward >"

EXIT east TO in_front_of_building.

EXIT north TO west_inner_ward.

END LOCATION sw_inner_ward.

----------------------
LOCATION se_inner_ward
----------------------
NAME Inner ward

DESCRIPTION
    "< south-east corner of inner ward >"

EXIT west TO in_front_of_building.

EXIT north TO east_inner_ward.

END LOCATION se_inner_ward.

----------------------
LOCATION nw_inner_ward
----------------------
NAME Inner ward

DESCRIPTION
    "< north-west corner of inner ward >"

EXIT east TO behind_building.

EXIT south TO west_inner_ward.

END LOCATION nw_inner_ward.

----------------------
LOCATION ne_inner_ward
----------------------
NAME Inner ward

DESCRIPTION
    "< north-east corner of inner ward >"

EXIT west TO behind_building.

EXIT south TO east_inner_ward.

END LOCATION ne_inner_ward.

------------------------
LOCATION west_inner_ward
------------------------
NAME West 'of' main building

DESCRIPTION
    "< west of inner building >"

EXIT north TO nw_inner_ward.

EXIT south TO sw_inner_ward.

EXIT west TO west_inner_corridor
    CHECK west_inner_door IS open
        ELSE
            "$nOpen the door first."
END EXIT.

END LOCATION west_inner_ward.

------------------------
LOCATION east_inner_ward
------------------------
NAME East 'of' main building

DESCRIPTION
    "< west of inner building >"

EXIT north TO nw_inner_ward.

EXIT south TO sw_inner_ward.

EXIT east TO east_inner_corridor
    CHECK east_inner_door IS open
        ELSE
            "$nOpen the door first."
END EXIT.

END LOCATION east_inner_ward.

------------------------
LOCATION behind_building
------------------------
NAME Behind the Castle

DESCRIPTION
    "< behind the main building >"

EXIT east TO ne_inner_ward.

EXIT west TO nw_inner_ward.

EXIT south TO lab_entrance
    CHECK lab_outer_door IS found
        ELSE "$nA wall blocks your passage."
END EXIT.

END LOCATION behind_building.

-- Inner wall passage

----------------------------
LOCATION west_inner_corridor
----------------------------
NAME Inner wall passage

DESCRIPTION
    "< west side of inner passage >"

EXIT north TO nw_inner_corridor.

EXIT south TO castle_armory.

EXIT east TO west_inner_ward
    CHECK west_inner_door IS open
        ELSE
            "$nOpen the door first."
END EXIT.

END LOCATION west_inner_corridor.

----------------------------
LOCATION east_inner_corridor
----------------------------
NAME Inner wall passage

DESCRIPTION
    "< east side of inner passage >"

EXIT north TO ne_inner_corridor.

EXIT south TO castle_storeroom.

EXIT west TO east_inner_ward
    CHECK east_inner_door IS open
        ELSE
            "$nOpen the door first."
END EXIT.

END LOCATION east_inner_corridor.

--------------------------
LOCATION nw_inner_corridor
--------------------------
NAME Inner wall passage

DESCRIPTION
    "< north-west inner wall passage >"

EXIT south TO west_inner_corridor.

EXIT east TO north_inner_corridor.

EXIT down TO dungeon_entrance
    CHECK dungeon_grating IS open
        ELSE
            "$nOpen the grating first."
END EXIT.

END LOCATION nw_inner_corridor.

--------------------------
LOCATION ne_inner_corridor
--------------------------
NAME Inner wall passage

DESCRIPTION
    "< north-east inner wall passage >"

EXIT south TO east_inner_corridor.

EXIT west TO north_inner_corridor.

EXIT down TO store_entrance
    CHECK store_trapdoor IS open
        ELSE
            "$nOpen the trapdoor first."
END EXIT.

END LOCATION ne_inner_corridor.

-----------------------------
LOCATION north_inner_corridor
-----------------------------
NAME Inner wall passage

DESCRIPTION
    "< north inner passage >"

EXIT west TO nw_inner_corridor.

EXIT east TO ne_inner_corridor.

EXIT up TO north_castle_wall.

END LOCATION north_inner_corridor.

----------------------
LOCATION castle_armory
----------------------
NAME Armory

DESCRIPTION
    "< armory description >"

EXIT north TO west_inner_corridor.

END LOCATION castle_armory.

-------------------------
LOCATION castle_storeroom
-------------------------
NAME Storeroom

DESCRIPTION
    "< storeroom description >"

EXIT north TO east_inner_corridor.

END LOCATION castle_storeroom.

------------------------------------------------------------------------
-- Stage 3. Inside Castle (main floor)
--
------------------------------------------------------------------------

-----------------------
LOCATION entrance_foyer
-----------------------
NAME Entrance 'of' the Castle

DESCRIPTION
    "< entrance foyer >"

EXIT north TO fountain_hall.

EXIT south TO in_front_of_building
    CHECK castle_door IS open
        ELSE
            "$nOpen the door first."
END EXIT.

END LOCATION entrance_foyer.


----------------------
LOCATION fountain_hall
----------------------
NAME Fountain hall

DESCRIPTION
    "< fountain hall >"

EXIT west TO meeting_hall.

EXIT east TO canteen.

EXIT south TO entrance_foyer.

END LOCATION fountain_hall.

---------------------
LOCATION meeting_hall
---------------------
NAME Meeting hall

DESCRIPTION
    "< meeting hall >"

EXIT north TO castle_ladder_bottom.

EXIT east TO fountain_hall.

END LOCATION meeting_hall.

----------------
LOCATION canteen
----------------
NAME Canteen

DESCRIPTION
    "< canteen >"

EXIT west TO fountain_hall.

EXIT north TO kitchen.

END LOCATION canteen.

----------------
LOCATION kitchen
----------------
NAME Castle kitchen

DESCRIPTION
    "< kitchen >"

EXIT south TO canteen.

END LOCATION kitchen.

-----------------------------
LOCATION castle_ladder_bottom
-----------------------------
NAME Ladder bottom
    IS NOT with_door_forced.

DESCRIPTION
    "< ladder bottom >"

EXIT south TO meeting_hall.

EXIT east TO secret_storeroom
    CHECK castle_ladder_bottom IS with_door_forced
        ELSE "$nMassive iron door blocks your passage."
END EXIT.

EXIT up TO castle_ladder_middle.

END LOCATION castle_ladder_bottom.

-------------------------
LOCATION secret_storeroom
-------------------------
NAME Small storeroom

DESCRIPTION
    "< small storeroom >"

EXIT west TO castle_ladder_bottom.

EXIT east TO castle_escape_room
    CHECK escape_room_door IS open
        ELSE "$nSolid stone door blocks your passage."
END EXIT.

END LOCATION secret_storeroom.

---------------------------
LOCATION castle_escape_room
---------------------------
NAME Secret room

DESCRIPTION
    "< escape room >"

EXIT west TO secret_storeroom
    CHECK escape_room_door IS open
        ELSE "$nSolid stone door blocks your passage."
END EXIT.

END LOCATION castle_escape_room.

------------------------------------------------------------------------
-- Stage 4. Castle living room
--
------------------------------------------------------------------------

-----------------------------
LOCATION castle_ladder_middle
-----------------------------
NAME Ladder middle

DESCRIPTION
    "< ladder middle >"

EXIT south TO guest_chamber.

EXIT down TO castle_ladder_bottom.

END LOCATION castle_ladder_middle.

----------------------
LOCATION guest_chamber
----------------------
NAME Corridor

DESCRIPTION
    "< guest rooms chamber >"

EXIT northwest TO castle_ladder_middle.

EXIT northeast TO guest_room1.

EXIT southwest TO guest_room2.

EXIT southeast TO guest_room3.

EXIT east TO private_chamber.

END LOCATION guest_chamber.

--------------------
LOCATION guest_room1
--------------------
NAME Guest room

DESCRIPTION
    "< guest room 1 >"

EXIT south TO guest_chamber.

END LOCATION guest_room1.

--------------------
LOCATION guest_room2
--------------------
NAME Guest room

DESCRIPTION
    "< guest room 2 >"

EXIT north TO guest_chamber.

END LOCATION guest_room2.

--------------------
LOCATION guest_room3
--------------------
NAME Guest room

DESCRIPTION
    "< guest room 3 >"

EXIT north TO guest_chamber.

END LOCATION guest_room3.

------------------------
LOCATION private_chamber
------------------------
NAME Private chamber

DESCRIPTION
    "< private chamber >"

EXIT north TO keeper_apartments.

EXIT south TO library_chamber.

EXIT west TO guest_chamber.

END LOCATION private_chamber.

--------------------------
LOCATION keeper_apartments
--------------------------
NAME Keeper apartments

DESCRIPTION
    "< keeper apartments >"

EXIT south TO private_chamber.

END LOCATION keeper_apartments.

------------------------
LOCATION library_chamber
------------------------
NAME Small chamber

DESCRIPTION
    "< chamber >"

EXIT north TO private_chamber.

EXIT south TO library.

END LOCATION library_chamber.

----------------
LOCATION library
----------------
NAME Castle library

DESCRIPTION
    "< library >"

EXIT north TO library_chamber.

EXIT east TO castle_closet.

END LOCATION library.

----------------------
LOCATION castle_closet
----------------------
NAME Closet

DESCRIPTION
    "< closet >"

EXIT west TO library.

END LOCATION castle_closet.

------------------------------------------------------------------------
-- Stage 5. Lightglobe area
--
------------------------------------------------------------------------

--------------------
LOCATION castle_roof
--------------------
NAME Castle roof

DESCRIPTION
    "< castle roof >"

EXIT down TO castle_ladder_middle.

END LOCATION castle_roof.


------------------------------------------------------------------------
-- Stage 6. Dungeons
--
------------------------------------------------------------------------

-------------------------
LOCATION dungeon_entrance
-------------------------
NAME Ladder bottom
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_entrance + light OF Hero) > 0 THEN
        "< bottom of ladder >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT up TO nw_inner_corridor
    CHECK dungeon_grating IS open
        ELSE
            "$nOpen the grating first."
END EXIT.

EXIT east TO dungeon_east_corridor.

EXIT west TO dungeon_west_corridor1.

END LOCATION dungeon_entrance.

------------------------------
LOCATION dungeon_east_corridor
------------------------------
NAME Dungeon corridor
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_east_corridor + light OF Hero) > 0 THEN
        "< east corridor >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT west TO dungeon_entrance.

EXIT east TO dungeon_basin.

END LOCATION dungeon_east_corridor.

-------------------------------
LOCATION dungeon_west_corridor1
-------------------------------
NAME Dungeon corridor
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_west_corridor1 + light OF Hero) > 0 THEN
        "< west corridor >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT east TO dungeon_entrance.

EXIT west TO dungeon_west_corridor2.

END LOCATION dungeon_west_corridor1.

-------------------------------
LOCATION dungeon_west_corridor2
-------------------------------
NAME Dungeon corridor
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_west_corridor2 + light OF Hero) > 0 THEN
        "< prison cells >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT east TO dungeon_west_corridor1.

EXIT west TO dungeon_west_corridor3.

END LOCATION dungeon_west_corridor2.

-------------------------------
LOCATION dungeon_west_corridor3
-------------------------------
NAME Dungeon corridor
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_west_corridor3 + light OF Hero) > 0 THEN
        "< store and training hall >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT north TO dungeon_training_hall.

EXIT south TO dungeon_store.

EXIT east TO dungeon_west_corridor2.

END LOCATION dungeon_west_corridor3.

----------------------
LOCATION dungeon_store
----------------------
NAME Storeroom
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_store + light OF Hero) > 0 THEN
        "< dungeon store >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT north TO dungeon_west_corridor3.

END LOCATION dungeon_store.

------------------------------
LOCATION dungeon_training_hall
------------------------------
NAME Training hall
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_training_hall + light OF Hero) > 0 THEN
        "< training hall >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT south TO dungeon_west_corridor3.

END LOCATION dungeon_training_hall.

----------------------
LOCATION dungeon_basin
----------------------
NAME Water source
    HAS light 0.

DESCRIPTION
    IF (light OF dungeon_basin + light OF Hero) > 0 THEN
        "< training hall >"
    ELSE
        "$nIt's too dark here."
    END IF.

EXIT west TO dungeon_east_corridor.

END LOCATION dungeon_basin.

------------------------------------------------------------------------
-- Stage 7. Storerooms
--
------------------------------------------------------------------------

-----------------------
LOCATION store_entrance
-----------------------
NAME Ladder bottom
    HAS light 0.

DESCRIPTION
    IF (light OF store_entrance + light OF Hero) > 0 THEN
        "< bottom of ladder >"
    ELSE
        "$nIt is too dark here."
    END IF.

EXIT up TO ne_inner_corridor
    CHECK store_trapdoor IS open
        ELSE
            "$nOpen the trapdoor first."
END EXIT.

EXIT east TO store_east_corridor.

END LOCATION store_entrance.

----------------------------
LOCATION store_east_corridor
----------------------------
NAME Store passage
    HAS light 0.

DESCRIPTION
    IF (light OF store_east_corridor + light OF Hero) > 0 THEN
        "< bottom of ladder >"
    ELSE
        "$nIt is too dark here."
    END IF.

EXIT west TO store_entrance.

EXIT east TO store_north_corridor.

END LOCATION store_east_corridor.

-----------------------------
LOCATION store_north_corridor
-----------------------------
NAME Store passage
    HAS light 0.

DESCRIPTION
    IF (light OF store_north_corridor + light OF Hero) > 0 THEN
        "< bottom of ladder >"
    ELSE
        "$nIt is too dark here."
    END IF.

EXIT west TO store_east_corridor.

EXIT south TO store_cellar.

END LOCATION store_north_corridor.

---------------------
LOCATION store_cellar
---------------------
NAME Cellar
    HAS light 0.

DESCRIPTION
    IF (light OF store_cellar + light OF Hero) > 0 THEN
        "< bottom of ladder >"
    ELSE
        "$nIt is too dark here."
    END IF.

EXIT north TO store_north_corridor.

END LOCATION store_cellar.

------------------------------------------------------------------------
-- Stage 8. Alchemist lab
--
------------------------------------------------------------------------

---------------------
LOCATION lab_entrance
---------------------
NAME 'Dead' 'end'
    IS NOT scored.

DESCRIPTION
    "< sparkling wall >"

EXIT north, up TO behind_building
    DOES
        "< door closes ! >"
        MAKE lab_outer_door NOT open.
END EXIT.

END LOCATION lab_entrance.

------------------------------------------------------------------------
-- Stage 9. Castle wall
--
------------------------------------------------------------------------

--------------------------
LOCATION north_castle_wall
--------------------------
NAME North side 'of' Castle wall

DESCRIPTION
    "< north castle wall >"

EXIT down TO north_inner_corridor.

END LOCATION north_castle_wall.

OBJECT global_data AT nowhere
        IS NOT waiting_reply.
        IS NOT answered_right.
        IS NOT mist_now.
        HAS expected_reply "none".
        HAS current_day 1.      -- number of day
        HAS current_hour 9.     -- hour
        HAS current_minute 0.   -- minutes
        HAS delay_time_was 0.   -- storage for increment
        HAS delay_time 1.       -- increment for minutes
        HAS current_score 0.
        HAS maximum_score 200.
DESCRIPTION
END OBJECT global_data.

CONTAINER inventory
    LIMITS
        weight 100
            THEN "You cannot lift so much."
    HEADER
        "$nYou carry"
    ELSE
        "$nYou have nothing of note."
END CONTAINER inventory.

CONTAINER body_parts
END CONTAINER body_parts.

------------------------------------------------------------------------
-- "Mentioned" objects. To implement some actions, and to allow
-- "ask smb. about..." verb.
------------------------------------------------------------------------

OBJECT eyes AT nowhere
    IS openable.
    HAS weight 1000.

DESCRIPTION
    ""

VERB open
    DOES ONLY
        IF Hero IS with_eyes_closed THEN
            MAKE Hero NOT with_eyes_closed.
            INCREASE light OF Hero BY 10.
            "$nYou open eyes again."
        ELSE
            "$nYour eyes are not closed."
        END IF.
END VERB open.

VERB close
    DOES ONLY
        IF Hero IS NOT with_eyes_closed THEN
            MAKE Hero with_eyes_closed.
            DECREASE light OF Hero BY 10.
            "$nYou close your eyes."
        ELSE
            "$nYour eyes are closed already."
        END IF.
END VERB close.

END OBJECT eyes.

OBJECT weather AT nowhere
END OBJECT weather.

OBJECT castle AT nowhere
END OBJECT castle.

------------------
OBJECT castle_gate NAME heavy iron portcullis AT in_front_of_castle
------------------
    IS openable.
    IS open.
    IS found.
    HAS weight 1000.

DESCRIPTION
    "< heavy iron portcullis > is"
    IF castle_gate IS open THEN
        "raised."
    ELSE
        "lowered."
    END IF.

VERB open
    DOES ONLY
        "$nHow ?"
END VERB open.

VERB close
    DOES ONLY
        "$nHow ?"
END VERB close.

END OBJECT castle_gate.

------------------
OBJECT castle_door NAME gray marble door AT in_front_of_building
------------------
    IS openable.
    IS open.
    IS found.
    HAS weight 1000.

DESCRIPTION
    "< dark marble door > is"
    IF castle_gate IS open THEN
        "open."
    ELSE
        "closed."
    END IF.

END OBJECT castle_door.

----------------------
OBJECT west_inner_door NAME sturdy iron door AT west_inner_ward
----------------------
    IS openable.
    IS NOT open.
    IS found.
    HAS weight 1000.

DESCRIPTION
    "< sturdy iron door > is"
    IF west_inner_door IS open THEN
        "open."
    ELSE
        "closed."
    END IF.

END OBJECT west_inner_door.

----------------------
OBJECT east_inner_door NAME sturdy oaken door AT east_inner_ward
----------------------
    IS openable.
    IS NOT open.
    IS found.
    HAS weight 1000.

DESCRIPTION
    "< sturdy oaken door > is"
    IF east_inner_door IS open THEN
        "open."
    ELSE
        "closed."
    END IF.

END OBJECT east_inner_door.

----------------------
OBJECT dungeon_grating NAME heavy iron grating AT nw_inner_corridor
----------------------
    IS openable.
    IS NOT open.
    IS locked.
    IS found.
    HAS weight 1000.

DESCRIPTION
    "< heave iron grating > is"
    IF dungeon_grating IS locked THEN
        "closed and locked."
    ELSIF dungeon_grating IS open THEN
        "open."
    ELSE
        "closed."
    END IF.

VERB open
    CHECK dungeon_grating IS NOT locked
        ELSE
            "$nIt seems the grating is locked."
END VERB open.

END OBJECT dungeon_grating.

---------------------
OBJECT store_trapdoor NAME wooden trapdoor AT ne_inner_corridor
---------------------
    IS openable.
    IS NOT open.
    IS found.
    HAS weight 1000.

DESCRIPTION
    "< old wooden trapdoor > is"
    IF store_trapdoor IS open THEN
        "open."
    ELSE
        "closed."
    END IF.

END OBJECT store_trapdoor.

---------------------
OBJECT lab_outer_door NAME Hidden door AT behind_building
---------------------
    IS openable.
    IS NOT found.
    IS NOT scored.
    IS NOT open.
    HAS weight 1000.

DESCRIPTION
    IF lab_outer_door IS found THEN
        "< lab outer door >"
    END IF.

VERB open
    DOES ONLY
        IF lab_outer_door IS found THEN
            "$nYou cannot open the door."
        END IF.
END VERB open.

VERB close
    DOES ONLY
        IF lab_outer_door IS found THEN
            "$nThe door resists."
        END IF.
END VERB close.

END OBJECT lab_outer_door.

-----------------------
OBJECT escape_room_door NAME Solid stone door AT secret_storeroom
-----------------------
    IS openable.
    IS NOT open.
    IS NOT scored.
    HAS weight 1000.

DESCRIPTION
    "< stone door with code lock >"

VERB open
    DOES ONLY "$nIt seems the door is locked."
END VERB open.

VERB close
    DOES ONLY
        "$nYou hear a soft click as the door locks."
        MAKE escape_room_door NOT open.
END VERB close.

END OBJECT escape_room_door.

---------------------
OBJECT castle_ladder1 NAME Ladder AT castle_ladder_bottom
---------------------
    HAS weight 1000.

DESCRIPTION
    "< wooden ladder leading up >"

END OBJECT castle_ladder1.

--------------
-- Timer event
--------------
EVENT timer
    INCREASE current_minute OF global_data BY delay_time OF global_data.
    IF current_minute OF global_data > 59 THEN
        DECREaSE current_minute OF global_data BY 60.
        INCREASE current_hour OF global_data.
        IF current_hour OF global_data > 23 THEN
            SET current_hour OF global_data TO 0.
            INCREASE current_day OF global_data.
        END IF.
    END IF.
    SCHEDULE timer AFTER 1.
    SET delay_time_was OF global_data TO delay_time OF global_data.
    SET delay_time OF global_data TO 1.
END EVENT timer.

-----------------------
-- "Door follows" rules
-----------------------

-- Castle gate (portcullis)

WHEN Hero AT in_front_of_castle AND castle_gate NOT AT in_front_of_castle =>
   LOCATE castle_gate AT in_front_of_castle.
    DESCRIBE castle_gate.

WHEN Hero AT inner_ward_entrance AND castle_gate NOT AT inner_ward_entrance =>
    LOCATE castle_gate AT inner_ward_entrance.
    DESCRIBE castle_gate.

-- Castle door (dark marble door )

WHEN Hero AT in_front_of_building AND castle_door NOT AT in_front_of_building =>
    LOCATE castle_door AT in_front_of_building.
    DESCRIBE castle_door.

WHEN Hero AT entrance_foyer AND castle_door NOT AT entrance_foyer =>
    LOCATE castle_door AT entrance_foyer.
    DESCRIBE castle_door.

-- West inner ward door

-- COMMENT: remove this rule and uncomment the following two rules
--          to rid of errors

WHEN ((Hero AT west_inner_ward) OR (Hero AT west_inner_corridor)) AND west_inner_door NOT HERE =>
    LOCATE west_inner_door HERE.
    "The door is at" SAY LOCATION. "$$."
    DESCRIBE west_inner_door.

--WHEN Hero AT west_inner_ward AND west_inner_door NOT AT west_inner_ward =>
--    LOCATE west_inner_door AT west_inner_ward.
--    DESCRIBE west_inner_door.
--
--WHEN Hero AT west_inner_corridor AND west_inner_door NOT AT west_inner_corridor =>
--    LOCATE west_inner_door AT west_inner_corridor.
--    DESCRIBE west_inner_door.
--
-- East inner ward door

WHEN Hero AT east_inner_ward AND east_inner_door NOT AT east_inner_ward =>
    LOCATE east_inner_door AT east_inner_ward.
    DESCRIBE east_inner_door.

WHEN Hero AT east_inner_corridor AND east_inner_door NOT AT east_inner_corridor =>
    LOCATE east_inner_door AT east_inner_corridor.
    DESCRIBE east_inner_door.

-- Dungeon grating

WHEN Hero AT nw_inner_corridor AND dungeon_grating NOT AT nw_inner_corridor =>
    LOCATE dungeon_grating AT nw_inner_corridor.
    DESCRIBE dungeon_grating.

WHEN Hero AT dungeon_entrance AND dungeon_grating NOT AT dungeon_entrance =>
    LOCATE dungeon_grating AT dungeon_entrance.
    DESCRIBE dungeon_grating.

-- Store trapdoor

WHEN Hero AT ne_inner_corridor AND store_trapdoor NOT AT ne_inner_corridor =>
    LOCATE store_trapdoor AT ne_inner_corridor.
    DESCRIBE store_trapdoor.

WHEN Hero AT store_entrance AND store_trapdoor NOT AT store_entrance =>
    LOCATE store_trapdoor AT store_entrance.
    DESCRIBE store_trapdoor.

-- Escape room code door

WHEN Hero AT secret_storeroom AND escape_room_door NOT AT secret_storeroom =>
    LOCATE escape_room_door AT secret_storeroom.
    DESCRIBE escape_room_door.

WHEN Hero AT castle_escape_room AND escape_room_door NOT AT castle_escape_room =>
    LOCATE escape_room_door AT castle_escape_room.
    DESCRIBE escape_room_door.

-----------------------------------------------------------------------
----                      Guardian of Onddo Morron
-----------------------------------------------------------------------
----                         Actors definition
-----------------------------------------------------------------------

----------
ACTOR hero
----------
NAME me
    IS NOT with_eyes_closed.
    HAS x 6.
    HAS y 1.
    HAS light 0.
    HAS strength 14.

DESCRIPTION
    "You are a pleasant looking Melrine."
    LIST inventory.

END ACTOR hero.

-----------------
ACTOR questioneer -- formal 'actor' to ask questions
-----------------
DESCRIPTION
---------
SCRIPT 1. -- Quitting the game
---------
STEP
    "$nDo you really want to quit ?"
    SET expected_reply OF global_data TO "yes".
    MAKE global_data waiting_reply.
    MAKE global_data NOT answered_right.
STEP
    IF global_data IS answered_right THEN
        "$nYou have collected" SAY current_score OF global_data.
        "score points of maximum" SAY maximum_score OF global_data. "possible."
        QUIT.
    ELSE
        "$nChanged your mind ?"
    END IF.
    MAKE global_data NOT waiting_reply.
    LOCATE questioneer AT nowhere.
END ACTOR questioneer.

START AT in_front_of_castle.
"< introduction >"
SCHEDULE timer AFTER 1.
LOCATE eyes IN body_parts.
VISITS 0.
